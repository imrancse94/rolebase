{"ast":null,"code":"var _jsxFileName = \"/media/imran/Projects/htdocs/rolebase/frontend/src/views/Base/Tooltips/Tooltips.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Tooltip, UncontrolledTooltip } from 'reactstrap';\n\nclass TooltipItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen\n    });\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mr-1\",\n      color: \"secondary\",\n      id: 'Tooltip-' + this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.props.item.text), React.createElement(Tooltip, {\n      placement: this.props.item.placement,\n      isOpen: this.state.tooltipOpen,\n      target: 'Tooltip-' + this.props.id,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Tooltip Content!\"));\n  }\n\n}\n\nclass Tooltips extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: [false, false],\n      tooltips: [{\n        placement: 'top',\n        text: 'Top'\n      }, {\n        placement: 'bottom',\n        text: 'Bottom'\n      }, {\n        placement: 'left',\n        text: 'Left'\n      }, {\n        placement: 'right',\n        text: 'Right'\n      }]\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.tooltipOpen.map((element, index) => {\n      return index === i ? !element : false;\n    });\n    this.setState({\n      tooltipOpen: newArray\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Tooltips\"), React.createElement(\"div\", {\n      className: \"card-header-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://reactstrap.github.io/components/tooltips/\",\n      rel: \"noreferrer noopener\",\n      target: \"_blank\",\n      className: \"card-header-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"docs\")))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Somewhere in here is a \", React.createElement(\"a\", {\n      href: \"#\",\n      id: \"TooltipExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"tooltip\"), \".\"), React.createElement(Tooltip, {\n      placement: \"right\",\n      isOpen: this.state.tooltipOpen[0],\n      target: \"TooltipExample\",\n      toggle: () => {\n        this.toggle(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Hello world!\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Tooltip\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" disable autohide\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Sometimes you need to allow users to select text within a \", React.createElement(\"a\", {\n      href: \"#\",\n      id: \"DisabledAutoHideExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"tooltip\"), \".\"), React.createElement(Tooltip, {\n      placement: \"top\",\n      isOpen: this.state.tooltipOpen[1],\n      autohide: false,\n      target: \"DisabledAutoHideExample\",\n      toggle: () => {\n        this.toggle(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Try to select this text!\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Tooltip\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" list\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.tooltips.map((tooltip, i) => {\n      return React.createElement(TooltipItem, {\n        key: i,\n        item: tooltip,\n        id: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    }))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-align-justify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Tooltip\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" uncontrolled\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Somewhere in here is a \", React.createElement(\"a\", {\n      href: \"#\",\n      id: \"UncontrolledTooltipExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"tooltip\"), \".\"), React.createElement(UncontrolledTooltip, {\n      placement: \"right\",\n      target: \"UncontrolledTooltipExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Hello world!\"))));\n  }\n\n}\n\nexport default Tooltips;","map":{"version":3,"sources":["/media/imran/Projects/htdocs/rolebase/frontend/src/views/Base/Tooltips/Tooltips.js"],"names":["React","Component","Button","Card","CardBody","CardHeader","Tooltip","UncontrolledTooltip","TooltipItem","constructor","props","toggle","bind","state","tooltipOpen","setState","render","id","item","text","placement","Tooltips","tooltips","i","newArray","map","element","index","tooltip"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardHeader, Tooltip, UncontrolledTooltip } from 'reactstrap';\n\nclass TooltipItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: false,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen,\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.item.text}\n        </Button>\n        <Tooltip placement={this.props.item.placement} isOpen={this.state.tooltipOpen} target={'Tooltip-' + this.props.id} toggle={this.toggle}>\n          Tooltip Content!\n        </Tooltip>\n      </span>\n    );\n  }\n}\n\nclass Tooltips extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: [false, false],\n      tooltips: [\n        {\n          placement: 'top',\n          text: 'Top',\n        },\n        {\n          placement: 'bottom',\n          text: 'Bottom',\n        },\n        {\n          placement: 'left',\n          text: 'Left',\n        },\n        {\n          placement: 'right',\n          text: 'Right',\n        },\n      ],\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.tooltipOpen.map((element, index) => {\n      return (index === i ? !element : false);\n    });\n    this.setState({\n      tooltipOpen: newArray,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltips</strong>\n            <div className=\"card-header-actions\">\n              <a href=\"https://reactstrap.github.io/components/tooltips/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Somewhere in here is a <a href=\"#\" id=\"TooltipExample\">tooltip</a>.</p>\n            <Tooltip placement=\"right\" isOpen={this.state.tooltipOpen[0]} target=\"TooltipExample\" toggle={() => {this.toggle(0);}}>\n              Hello world!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> disable autohide</small>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Sometimes you need to allow users to select text within a <a href=\"#\" id=\"DisabledAutoHideExample\">tooltip</a>.</p>\n            <Tooltip placement=\"top\" isOpen={this.state.tooltipOpen[1]} autohide={false} target=\"DisabledAutoHideExample\" toggle={() => {this.toggle(1);}}>\n              Try to select this text!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> list</small>\n          </CardHeader>\n          <CardBody>\n            {this.state.tooltips.map((tooltip, i) => {\n              return <TooltipItem key={i} item={tooltip} id={i} />;\n            })}\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i><strong>Tooltip</strong>\n            <small> uncontrolled</small>\n          </CardHeader>\n          <CardBody>\n            {/*eslint-disable-next-line*/}\n            <p>Somewhere in here is a <a href=\"#\" id=\"UncontrolledTooltipExample\">tooltip</a>.</p>\n            <UncontrolledTooltip placement=\"right\" target=\"UncontrolledTooltipExample\">\n              Hello world!\n            </UncontrolledTooltip>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Tooltips;\n"]},"metadata":{},"sourceType":"module"}