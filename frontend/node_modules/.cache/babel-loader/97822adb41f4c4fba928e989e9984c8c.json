{"ast":null,"code":"import _defineProperty from \"/media/imran/Projects/htdocs/rolebase/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst AuthReducer = (state = {}, actions) => {\n  switch (actions.type) {\n    case \"SET_LOGIN\":\n      return _objectSpread({}, state, {\n        loggedIn: true,\n        user: actions.payload\n      });\n\n    case \"SET_LOGOUT\":\n      return _objectSpread({}, state, {\n        loggedIn: false,\n        user: {}\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;","map":{"version":3,"sources":["/media/imran/Projects/htdocs/rolebase/frontend/src/store/reducers/AuthReducer.js"],"names":["AuthReducer","state","actions","type","loggedIn","user","payload"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,OAAb,KAAyB;AAC3C,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAK,WAAL;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,QAAQ,EAAE,IAA7B;AAAmCC,QAAAA,IAAI,EAAEH,OAAO,CAACI;AAAjD;;AACF,SAAK,YAAL;AACE,+BAAYL,KAAZ;AAAmBG,QAAAA,QAAQ,EAAE,KAA7B;AAAoCC,QAAAA,IAAI,EAAE;AAA1C;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["const AuthReducer = (state = {}, actions) => {\n  switch (actions.type) {\n    case \"SET_LOGIN\":\n      return { ...state, loggedIn: true, user: actions.payload };\n    case \"SET_LOGOUT\":\n      return { ...state, loggedIn: false, user: {} };\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;\n"]},"metadata":{},"sourceType":"module"}